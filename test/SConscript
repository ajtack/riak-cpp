import commands
import string

Import('env')
Import('library')

unit_tests_env = env.Clone()

#
# GoogleMock doesn't correctly detect the capabilities of gcc4.6 in particular.
#
if 'g++' in unit_tests_env['CXX']:
	gxx_version = string.split(commands.getoutput(unit_tests_env['CXX'] + ' -dumpversion'), '.')
	major, minor, sub = gxx_version[0], gxx_version[1], (gxx_version[2] if len(gxx_version) > 2 else 0)
	if minor <= '6':
		extra_cxxflags = ['-DGTEST_LANG_CXX11=0']
	else:
		extra_cxxflags = []
else:
	extra_cxxflags = []

unit_tests_env.Append(
	CPPPATH = [
		'#ext/gmock-1.7.0/include',
		'#ext/gmock-1.7.0/gtest/include'
		],

	CXXFLAGS = extra_cxxflags
	)

compilation_units = [
		Glob('units/*.cxx'),
		Glob('fixtures/*.cxx'),
		Glob('fixtures/*/*.cxx'),
		Glob('mocks/*.cxx'),
		Glob('mocks/*/*.cxx'),
		Glob('mocks/*/*/*.cxx')
	]

gmock = SConscript('#ext/gmock.SConscript', {'env': unit_tests_env}, variant_dir='ext/')
gtest = SConscript('#ext/gtest.SConscript', {'env': unit_tests_env}, variant_dir='ext/')

necessary_libraries = env['LIBS']
necessary_libraries.extend([library, gmock, gtest])

unit_tests = unit_tests_env.Program('unit_tests', compilation_units, LIBS=necessary_libraries)
unit_tests_env.Alias('test', [unit_tests], unit_tests[0].path)
unit_tests_env.AlwaysBuild('test')
Return('unit_tests')
