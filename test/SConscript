Import('env')
Import('library')

unit_tests_env = env.Clone()
unit_tests_env.Append(
	CPPPATH = [
		'#ext/gmock-1.7.0/include',
		'#ext/gmock-1.7.0/gtest/include'
		],
	)

compilation_units = [
		Glob('units/*.cxx'),
		Glob('fixtures/*.cxx'),
		Glob('fixtures/*/*.cxx'),
		Glob('mocks/*.cxx'),
		Glob('mocks/*/*.cxx'),
		Glob('mocks/*/*/*.cxx')
	]

gmock = SConscript('#ext/gmock.SConscript', 'env', variant_dir='ext/')
gtest = SConscript('#ext/gtest.SConscript', 'env', variant_dir='ext/')
unit_tests = unit_tests_env.Program('unit_tests', compilation_units, LIBS=[library, gmock, gtest, 'boost_log-mt', 'boost_log_setup-mt', 'boost_thread-mt', 'pthread', 'boost_system-mt', 'protobuf'])
unit_tests_env.Alias('test', [unit_tests], unit_tests[0].path)
unit_tests_env.AlwaysBuild('test')
Return('unit_tests')
